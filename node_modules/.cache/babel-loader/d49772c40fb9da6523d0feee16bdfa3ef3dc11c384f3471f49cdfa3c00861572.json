{"ast":null,"code":"import { parse, SelectorType, isTraversal } from \"css-what\";\nimport { _compileToken as compileToken, prepareContext } from \"css-select\";\nimport * as DomUtils from \"domutils\";\nimport * as boolbase from \"boolbase\";\nimport { getDocumentRoot, groupSelectors } from \"./helpers.js\";\nimport { isFilter, getLimit } from \"./positionals.js\";\n// Re-export pseudo extension points\nexport { filters, pseudos, aliases } from \"css-select\";\nconst UNIVERSAL_SELECTOR = {\n  type: SelectorType.Universal,\n  namespace: null\n};\nconst SCOPE_PSEUDO = {\n  type: SelectorType.Pseudo,\n  name: \"scope\",\n  data: null\n};\nexport function is(element, selector) {\n  let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return some([element], selector, options);\n}\nexport function some(elements, selector) {\n  let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  if (typeof selector === \"function\") return elements.some(selector);\n  const [plain, filtered] = groupSelectors(parse(selector));\n  return plain.length > 0 && elements.some(compileToken(plain, options)) || filtered.some(sel => filterBySelector(sel, elements, options).length > 0);\n}\nfunction filterByPosition(filter, elems, data, options) {\n  const num = typeof data === \"string\" ? parseInt(data, 10) : NaN;\n  switch (filter) {\n    case \"first\":\n    case \"lt\":\n      // Already done in `getLimit`\n      return elems;\n    case \"last\":\n      return elems.length > 0 ? [elems[elems.length - 1]] : elems;\n    case \"nth\":\n    case \"eq\":\n      return isFinite(num) && Math.abs(num) < elems.length ? [num < 0 ? elems[elems.length + num] : elems[num]] : [];\n    case \"gt\":\n      return isFinite(num) ? elems.slice(num + 1) : [];\n    case \"even\":\n      return elems.filter((_, i) => i % 2 === 0);\n    case \"odd\":\n      return elems.filter((_, i) => i % 2 === 1);\n    case \"not\":\n      {\n        const filtered = new Set(filterParsed(data, elems, options));\n        return elems.filter(e => !filtered.has(e));\n      }\n  }\n}\nexport function filter(selector, elements) {\n  let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return filterParsed(parse(selector), elements, options);\n}\n/**\n * Filter a set of elements by a selector.\n *\n * Will return elements in the original order.\n *\n * @param selector Selector to filter by.\n * @param elements Elements to filter.\n * @param options Options for selector.\n */\nfunction filterParsed(selector, elements, options) {\n  if (elements.length === 0) return [];\n  const [plainSelectors, filteredSelectors] = groupSelectors(selector);\n  let found;\n  if (plainSelectors.length) {\n    const filtered = filterElements(elements, plainSelectors, options);\n    // If there are no filters, just return\n    if (filteredSelectors.length === 0) {\n      return filtered;\n    }\n    // Otherwise, we have to do some filtering\n    if (filtered.length) {\n      found = new Set(filtered);\n    }\n  }\n  for (let i = 0; i < filteredSelectors.length && (found === null || found === void 0 ? void 0 : found.size) !== elements.length; i++) {\n    const filteredSelector = filteredSelectors[i];\n    const missing = found ? elements.filter(e => DomUtils.isTag(e) && !found.has(e)) : elements;\n    if (missing.length === 0) break;\n    const filtered = filterBySelector(filteredSelector, elements, options);\n    if (filtered.length) {\n      if (!found) {\n        /*\n         * If we haven't found anything before the last selector,\n         * just return what we found now.\n         */\n        if (i === filteredSelectors.length - 1) {\n          return filtered;\n        }\n        found = new Set(filtered);\n      } else {\n        filtered.forEach(el => found.add(el));\n      }\n    }\n  }\n  return typeof found !== \"undefined\" ? found.size === elements.length ? elements :\n  // Filter elements to preserve order\n  elements.filter(el => found.has(el)) : [];\n}\nfunction filterBySelector(selector, elements, options) {\n  var _a;\n  if (selector.some(isTraversal)) {\n    /*\n     * Get root node, run selector with the scope\n     * set to all of our nodes.\n     */\n    const root = (_a = options.root) !== null && _a !== void 0 ? _a : getDocumentRoot(elements[0]);\n    const opts = {\n      ...options,\n      context: elements,\n      relativeSelector: false\n    };\n    selector.push(SCOPE_PSEUDO);\n    return findFilterElements(root, selector, opts, true, elements.length);\n  }\n  // Performance optimization: If we don't have to traverse, just filter set.\n  return findFilterElements(elements, selector, options, false, elements.length);\n}\nexport function select(selector, root) {\n  let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  let limit = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : Infinity;\n  if (typeof selector === \"function\") {\n    return find(root, selector);\n  }\n  const [plain, filtered] = groupSelectors(parse(selector));\n  const results = filtered.map(sel => findFilterElements(root, sel, options, true, limit));\n  // Plain selectors can be queried in a single go\n  if (plain.length) {\n    results.push(findElements(root, plain, options, limit));\n  }\n  if (results.length === 0) {\n    return [];\n  }\n  // If there was only a single selector, just return the result\n  if (results.length === 1) {\n    return results[0];\n  }\n  // Sort results, filtering for duplicates\n  return DomUtils.uniqueSort(results.reduce((a, b) => [...a, ...b]));\n}\n/**\n *\n * @param root Element(s) to search from.\n * @param selector Selector to look for.\n * @param options Options for querying.\n * @param queryForSelector Query multiple levels deep for the initial selector, even if it doesn't contain a traversal.\n */\nfunction findFilterElements(root, selector, options, queryForSelector, totalLimit) {\n  const filterIndex = selector.findIndex(isFilter);\n  const sub = selector.slice(0, filterIndex);\n  const filter = selector[filterIndex];\n  // If we are at the end of the selector, we can limit the number of elements to retrieve.\n  const partLimit = selector.length - 1 === filterIndex ? totalLimit : Infinity;\n  /*\n   * Set the number of elements to retrieve.\n   * Eg. for :first, we only have to get a single element.\n   */\n  const limit = getLimit(filter.name, filter.data, partLimit);\n  if (limit === 0) return [];\n  /*\n   * Skip `findElements` call if our selector starts with a positional\n   * pseudo.\n   */\n  const elemsNoLimit = sub.length === 0 && !Array.isArray(root) ? DomUtils.getChildren(root).filter(DomUtils.isTag) : sub.length === 0 ? (Array.isArray(root) ? root : [root]).filter(DomUtils.isTag) : queryForSelector || sub.some(isTraversal) ? findElements(root, [sub], options, limit) : filterElements(root, [sub], options);\n  const elems = elemsNoLimit.slice(0, limit);\n  let result = filterByPosition(filter.name, elems, filter.data, options);\n  if (result.length === 0 || selector.length === filterIndex + 1) {\n    return result;\n  }\n  const remainingSelector = selector.slice(filterIndex + 1);\n  const remainingHasTraversal = remainingSelector.some(isTraversal);\n  if (remainingHasTraversal) {\n    if (isTraversal(remainingSelector[0])) {\n      const {\n        type\n      } = remainingSelector[0];\n      if (type === SelectorType.Sibling || type === SelectorType.Adjacent) {\n        // If we have a sibling traversal, we need to also look at the siblings.\n        result = prepareContext(result, DomUtils, true);\n      }\n      // Avoid a traversal-first selector error.\n      remainingSelector.unshift(UNIVERSAL_SELECTOR);\n    }\n    options = {\n      ...options,\n      // Avoid absolutizing the selector\n      relativeSelector: false,\n      /*\n       * Add a custom root func, to make sure traversals don't match elements\n       * that aren't a part of the considered tree.\n       */\n      rootFunc: el => result.includes(el)\n    };\n  } else if (options.rootFunc && options.rootFunc !== boolbase.trueFunc) {\n    options = {\n      ...options,\n      rootFunc: boolbase.trueFunc\n    };\n  }\n  /*\n   * If we have another filter, recursively call `findFilterElements`,\n   * with the `recursive` flag disabled. We only have to look for more\n   * elements when we see a traversal.\n   *\n   * Otherwise,\n   */\n  return remainingSelector.some(isFilter) ? findFilterElements(result, remainingSelector, options, false, totalLimit) : remainingHasTraversal ?\n  // Query existing elements to resolve traversal.\n  findElements(result, [remainingSelector], options, totalLimit) :\n  // If we don't have any more traversals, simply filter elements.\n  filterElements(result, [remainingSelector], options);\n}\nfunction findElements(root, sel, options, limit) {\n  const query = compileToken(sel, options, root);\n  return find(root, query, limit);\n}\nfunction find(root, query) {\n  let limit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : Infinity;\n  const elems = prepareContext(root, DomUtils, query.shouldTestNextSiblings);\n  return DomUtils.find(node => DomUtils.isTag(node) && query(node), elems, true, limit);\n}\nfunction filterElements(elements, sel, options) {\n  const els = (Array.isArray(elements) ? elements : [elements]).filter(DomUtils.isTag);\n  if (els.length === 0) return els;\n  const query = compileToken(sel, options);\n  return query === boolbase.trueFunc ? els : els.filter(query);\n}","map":{"version":3,"names":["parse","SelectorType","isTraversal","_compileToken","compileToken","prepareContext","DomUtils","boolbase","getDocumentRoot","groupSelectors","isFilter","getLimit","filters","pseudos","aliases","UNIVERSAL_SELECTOR","type","Universal","namespace","SCOPE_PSEUDO","Pseudo","name","data","is","element","selector","options","arguments","length","undefined","some","elements","plain","filtered","sel","filterBySelector","filterByPosition","filter","elems","num","parseInt","NaN","isFinite","Math","abs","slice","_","i","Set","filterParsed","e","has","plainSelectors","filteredSelectors","found","filterElements","size","filteredSelector","missing","isTag","forEach","el","add","root","_a","opts","context","relativeSelector","push","findFilterElements","select","limit","Infinity","find","results","map","findElements","uniqueSort","reduce","a","b","queryForSelector","totalLimit","filterIndex","findIndex","sub","partLimit","elemsNoLimit","Array","isArray","getChildren","result","remainingSelector","remainingHasTraversal","Sibling","Adjacent","unshift","rootFunc","includes","trueFunc","query","shouldTestNextSiblings","node","els"],"sources":["https://raw.githubusercontent.com/cheeriojs/cheerio-select/ef063a6ca4c3f0d02d2fc3505e750b6fb81c448d/src/index.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}