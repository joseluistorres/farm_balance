{"ast":null,"code":"var _jsxFileName = \"/Users/joseluistorres/my-projects/my-app/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\n\n// const CellTypes = {\n//   TEXT: 'TEXT',\n//   NUMBER: 'NUMBER',\n//   FORMULA: 'FORMULA'\n// };\n\n// const Cell = ({ type, value, onChange }) => {\n//   const [editing, setEditing] = useState(false);\n//   const [inputValue, setInputValue] = useState(value);\n\n//   useEffect(() => {\n//     setInputValue(value);\n//   }, [value]);\n\n//   const handleDoubleClick = () => {\n//     setEditing(true);\n//   };\n\n//   const handleChange = (e) => {\n//     setInputValue(e.target.value);\n//   };\n\n//   const handleBlur = () => {\n//     setEditing(false);\n//     onChange(inputValue);\n//   };\n\n//   return (\n//     <td onDoubleClick={handleDoubleClick}>\n//       {editing ? (\n//         <input\n//           type=\"text\"\n//           value={inputValue}\n//           onChange={handleChange}\n//           onBlur={handleBlur}\n//           autoFocus\n//         />\n//       ) : (\n//         <span>{value}</span>\n//       )}\n//     </td>\n//   );\n// };\n\n// const Spreadsheet = ({ identifiers }) => {\n//   const [cells, setCells] = useState([\n//     { type: CellTypes.TEXT, value: 'Grandma' },\n//     { type: CellTypes.NUMBER, value: '10' },\n//     { type: CellTypes.NUMBER, value: '20' },\n//     { type: CellTypes.FORMULA, value: '' },\n//     { type: CellTypes.TEXT, value: 'x' },\n//     { type: CellTypes.NUMBER, value: '5' }\n//   ]);\n\n//   const handleCellChange = (index, newValue) => {\n//     const newCells = [...cells];\n//     newCells[index].value = newValue;\n//     setCells(newCells);\n//   };\n\n//   useEffect(() => {\n//     const sum = cells.slice(1, 3).reduce((acc, cur) => acc + parseFloat(cur.value), 0);\n//     handleCellChange(3, sum.toString());\n//   }, [cells]);\n\n//   return (\n//     <table>\n//       <tbody>\n//         {cells.map((cell, index) => (\n//           <tr key={index}>\n//             <td>{identifiers[index]}</td>\n//             <Cell\n//               type={cell.type}\n//               value={cell.value}\n//               onChange={(newValue) => handleCellChange(index, newValue)}\n//             />\n//           </tr>\n//         ))}\n//       </tbody>\n//     </table>\n//   );\n// };\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CellTypes = {\n  TEXT: 'TEXT',\n  NUMBER: 'NUMBER',\n  FORMULA: 'FORMULA'\n};\nconst Cell = ({\n  type,\n  value,\n  onChange\n}) => {\n  _s();\n  const [editing, setEditing] = useState(false);\n  const [inputValue, setInputValue] = useState(value);\n  useEffect(() => {\n    setInputValue(value);\n  }, [value]);\n  const handleDoubleClick = () => {\n    setEditing(true);\n  };\n  const handleChange = e => {\n    setInputValue(e.target.value);\n  };\n  const handleBlur = () => {\n    setEditing(false);\n    onChange(inputValue);\n  };\n  return /*#__PURE__*/_jsxDEV(\"td\", {\n    onDoubleClick: handleDoubleClick,\n    children: editing ? /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: inputValue,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      autoFocus: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n_s(Cell, \"jhEAHPOHFeBmPXElzhGT1NZgvlw=\");\n_c = Cell;\nconst Spreadsheet = ({\n  identifiers\n}) => {\n  _s2();\n  const [cells, setCells] = useState([{\n    type: CellTypes.TEXT,\n    value: 'Grandma'\n  }, {\n    type: CellTypes.NUMBER,\n    value: '10'\n  }, {\n    type: CellTypes.NUMBER,\n    value: '20'\n  }, {\n    type: CellTypes.FORMULA,\n    value: ''\n  }, {\n    type: CellTypes.NUMBER,\n    value: '5'\n  }, {\n    type: CellTypes.FORMULA,\n    value: '0'\n  }]);\n  const handleCellChange = (index, newValue) => {\n    const newCells = [...cells];\n    newCells[index].value = newValue;\n    setCells(newCells);\n  };\n  useEffect(() => {\n    const sum1 = cells.slice(1, 3).reduce((acc, cur) => acc + parseFloat(cur.value), 0);\n    handleCellChange(3, sum1.toString());\n    const sum2 = cells.slice(4).reduce((acc, cur) => acc + parseFloat(cur.value), 0);\n    handleCellChange(4, sum2.toString());\n  }, [cells]);\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: cells.map((cell, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: identifiers[index]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Cell, {\n          type: cell.type,\n          value: cell.value,\n          onChange: newValue => handleCellChange(index, newValue)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n};\n\n// main app\n_s2(Spreadsheet, \"fNELmkPU93C7X9swgcU7nwOk0fo=\");\n_c2 = Spreadsheet;\nfunction App() {\n  const identifiers = ['', 'Corn Acres', 'Bean Acres', 'Total Acres:', 'Rent'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(Spreadsheet, {\n        identifiers: identifiers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 5\n  }, this);\n}\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Cell\");\n$RefreshReg$(_c2, \"Spreadsheet\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["logo","React","useState","useEffect","jsxDEV","_jsxDEV","CellTypes","TEXT","NUMBER","FORMULA","Cell","type","value","onChange","_s","editing","setEditing","inputValue","setInputValue","handleDoubleClick","handleChange","e","target","handleBlur","onDoubleClick","children","onBlur","autoFocus","fileName","_jsxFileName","lineNumber","columnNumber","_c","Spreadsheet","identifiers","_s2","cells","setCells","handleCellChange","index","newValue","newCells","sum1","slice","reduce","acc","cur","parseFloat","toString","sum2","map","cell","_c2","App","className","_c3","$RefreshReg$"],"sources":["/Users/joseluistorres/my-projects/my-app/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\n\nimport React, { useState, useEffect } from 'react';\n\n// const CellTypes = {\n//   TEXT: 'TEXT',\n//   NUMBER: 'NUMBER',\n//   FORMULA: 'FORMULA'\n// };\n\n// const Cell = ({ type, value, onChange }) => {\n//   const [editing, setEditing] = useState(false);\n//   const [inputValue, setInputValue] = useState(value);\n\n//   useEffect(() => {\n//     setInputValue(value);\n//   }, [value]);\n\n//   const handleDoubleClick = () => {\n//     setEditing(true);\n//   };\n\n//   const handleChange = (e) => {\n//     setInputValue(e.target.value);\n//   };\n\n//   const handleBlur = () => {\n//     setEditing(false);\n//     onChange(inputValue);\n//   };\n\n//   return (\n//     <td onDoubleClick={handleDoubleClick}>\n//       {editing ? (\n//         <input\n//           type=\"text\"\n//           value={inputValue}\n//           onChange={handleChange}\n//           onBlur={handleBlur}\n//           autoFocus\n//         />\n//       ) : (\n//         <span>{value}</span>\n//       )}\n//     </td>\n//   );\n// };\n\n// const Spreadsheet = ({ identifiers }) => {\n//   const [cells, setCells] = useState([\n//     { type: CellTypes.TEXT, value: 'Grandma' },\n//     { type: CellTypes.NUMBER, value: '10' },\n//     { type: CellTypes.NUMBER, value: '20' },\n//     { type: CellTypes.FORMULA, value: '' },\n//     { type: CellTypes.TEXT, value: 'x' },\n//     { type: CellTypes.NUMBER, value: '5' }\n//   ]);\n\n//   const handleCellChange = (index, newValue) => {\n//     const newCells = [...cells];\n//     newCells[index].value = newValue;\n//     setCells(newCells);\n//   };\n\n//   useEffect(() => {\n//     const sum = cells.slice(1, 3).reduce((acc, cur) => acc + parseFloat(cur.value), 0);\n//     handleCellChange(3, sum.toString());\n//   }, [cells]);\n\n//   return (\n//     <table>\n//       <tbody>\n//         {cells.map((cell, index) => (\n//           <tr key={index}>\n//             <td>{identifiers[index]}</td>\n//             <Cell\n//               type={cell.type}\n//               value={cell.value}\n//               onChange={(newValue) => handleCellChange(index, newValue)}\n//             />\n//           </tr>\n//         ))}\n//       </tbody>\n//     </table>\n//   );\n// };\n\nconst CellTypes = {\n  TEXT: 'TEXT',\n  NUMBER: 'NUMBER',\n  FORMULA: 'FORMULA'\n};\n\nconst Cell = ({ type, value, onChange }) => {\n  const [editing, setEditing] = useState(false);\n  const [inputValue, setInputValue] = useState(value);\n\n  useEffect(() => {\n    setInputValue(value);\n  }, [value]);\n\n  const handleDoubleClick = () => {\n    setEditing(true);\n  };\n\n  const handleChange = (e) => {\n    setInputValue(e.target.value);\n  };\n\n  const handleBlur = () => {\n    setEditing(false);\n    onChange(inputValue);\n  };\n\n  return (\n    <td onDoubleClick={handleDoubleClick}>\n      {editing ? (\n        <input\n          type=\"text\"\n          value={inputValue}\n          onChange={handleChange}\n          onBlur={handleBlur}\n          autoFocus\n        />\n      ) : (\n        <span>{value}</span>\n      )}\n    </td>\n  );\n};\n\nconst Spreadsheet = ({ identifiers }) => {\n  const [cells, setCells] = useState([\n    { type: CellTypes.TEXT, value: 'Grandma' },\n    { type: CellTypes.NUMBER, value: '10' },\n    { type: CellTypes.NUMBER, value: '20' },\n    { type: CellTypes.FORMULA, value: '' },\n    { type: CellTypes.NUMBER, value: '5' },\n    { type: CellTypes.FORMULA, value: '0' }\n  ]);\n\n  const handleCellChange = (index, newValue) => {\n    const newCells = [...cells];\n    newCells[index].value = newValue;\n    setCells(newCells);\n  };\n\n  useEffect(() => {\n    const sum1 = cells.slice(1, 3).reduce((acc, cur) => acc + parseFloat(cur.value), 0);\n    handleCellChange(3, sum1.toString());\n\n    const sum2 = cells.slice(4).reduce((acc, cur) => acc + parseFloat(cur.value), 0);\n    handleCellChange(4, sum2.toString());\n  }, [cells]);\n\n  return (\n    <table>\n      <tbody>\n        {cells.map((cell, index) => (\n          <tr key={index}>\n            <td>{identifiers[index]}</td>\n            <Cell\n              type={cell.type}\n              value={cell.value}\n              onChange={(newValue) => handleCellChange(index, newValue)}\n            />\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\n// main app\nfunction App() {\n  const identifiers = ['', 'Corn Acres', 'Bean Acres', 'Total Acres:', 'Rent'];\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Spreadsheet identifiers={identifiers} />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}