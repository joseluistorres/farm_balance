{"ast":null,"code":"var _jsxFileName = \"/Users/joseluistorres/my-projects/my-app/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport axios from 'axios';\nimport cheerio from 'cheerio';\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CellTypes = {\n  TEXT: 'TEXT',\n  NUMBER: 'NUMBER',\n  FORMULA: 'FORMULA'\n};\nconst Cell = ({\n  type,\n  value,\n  onChange\n}) => {\n  _s();\n  const [editing, setEditing] = useState(false);\n  const [inputValue, setInputValue] = useState(value);\n  useEffect(() => {\n    setInputValue(value);\n  }, [value]);\n  const handleDoubleClick = () => {\n    setEditing(true);\n  };\n  const handleChange = e => {\n    setInputValue(e.target.value);\n  };\n  const handleBlur = () => {\n    setEditing(false);\n    onChange(inputValue);\n  };\n  return /*#__PURE__*/_jsxDEV(\"td\", {\n    onDoubleClick: handleDoubleClick,\n    children: editing ? /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: inputValue,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      autoFocus: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(Cell, \"jhEAHPOHFeBmPXElzhGT1NZgvlw=\");\n_c = Cell;\nconst Spreadsheet = ({\n  identifiers\n}) => {\n  _s2();\n  const [cells, setCells] = useState([{\n    type: CellTypes.TEXT,\n    value: 'Grandma'\n  }, {\n    type: CellTypes.NUMBER,\n    value: '0'\n  }, {\n    type: CellTypes.NUMBER,\n    value: '115'\n  }, {\n    type: CellTypes.FORMULA,\n    value: ''\n  },\n  // Total Acres\n  {\n    type: CellTypes.NUMBER,\n    value: '220'\n  }, {\n    type: CellTypes.NUMBER,\n    value: '80'\n  }, {\n    type: CellTypes.NUMBER,\n    value: '105'\n  }, {\n    type: CellTypes.NUMBER,\n    value: ''\n  }, {\n    type: CellTypes.NUMBER,\n    value: ''\n  }, {\n    type: CellTypes.NUMBER,\n    value: '95'\n  }, {\n    type: CellTypes.NUMBER,\n    value: ''\n  }, {\n    type: CellTypes.NUMBER,\n    value: '49.74'\n  }, {\n    type: CellTypes.NUMBER,\n    value: '15.34'\n  }, {\n    type: CellTypes.NUMBER,\n    value: ''\n  }, {\n    type: CellTypes.NUMBER,\n    value: '35'\n  }, {\n    type: CellTypes.NUMBER,\n    value: '13'\n  }, {\n    type: CellTypes.NUMBER,\n    value: '140'\n  }, {\n    type: CellTypes.NUMBER,\n    value: '25'\n  }, {\n    type: CellTypes.FORMULA,\n    value: ''\n  }, {\n    type: CellTypes.TEXT,\n    value: ''\n  }, {\n    type: CellTypes.TEXT,\n    value: '65'\n  },\n  // Bu/Ac\n  {\n    type: CellTypes.FORMULA,\n    value: ''\n  },\n  // Bushels\n  {\n    type: CellTypes.TEXT,\n    value: ''\n  } // Price\n  ]);\n  const handleCellChange = (index, newValue) => {\n    const newCells = [...cells];\n    newCells[index].value = newValue;\n    setCells(newCells);\n  };\n  useEffect(() => {\n    const sum1 = cells.slice(1, 3).reduce((acc, cur) => acc + parseFloat(cur.value), 0);\n    handleCellChange(3, sum1.toString());\n    const sum3 = cells.slice(4, 18) // Slicing from index 4 to 17 to include the specified cells\n    .filter(cell => cell.value !== '') // Filtering out empty values\n    .reduce((acc, cur) => acc + parseFloat(cur.value), 0); // Summing up the non-empty values\n\n    const roundedSum3 = sum3.toFixed(2); // Round the sum to 2 decimals\n    handleCellChange(18, roundedSum3.toString()); // Changing the index to 17 for the last formula cell\n\n    // Formula calculation for the new formula cell\n    const value95 = parseFloat(cells[9].value); // Value from the cell above with value 95\n    const newValue = isNaN(value95) ? '' : (value95 * -0.8).toString(); // Multiply by -0.8\n    handleCellChange(10, newValue);\n\n    // Formula calculation for the new formula cell\n    const valueTotalAcres = parseFloat(cells[3].value); // Value from the cell above with value 76\n    const valueTotalCosts = parseFloat(cells[18].value); // Value from the cell above with value 76\n\n    //  const value95 = parseFloat(cells[10].value); // Value from the cell above with value 95\n    const total = isNaN(valueTotalAcres) || isNaN(valueTotalCosts) ? 0 : valueTotalAcres * valueTotalCosts; // Multiply the values\n    const roundedSum4 = total.toFixed(2); // Round the sum to 2 decimals\n    handleCellChange(19, roundedSum4);\n    const buPerAc = parseFloat(cells[20].value);\n    const totalAcres = parseFloat(cells[3].value);\n    const bushels = isNaN(buPerAc) || isNaN(totalAcres) ? 0 : buPerAc * totalAcres;\n    handleCellChange(21, bushels.toString());\n\n    // Parsing HTML to get soybeans price and update the last cell\n    axios.get('https://adm.gradable.com/market/Des-Moines--IA').then(response => {\n      const soybeansPrice = parseHTMLForSoybeansPrice(response.data);\n      handleCellChange(23, soybeansPrice);\n    }).catch(error => {\n      console.error('Error fetching soybeans price:', error);\n    });\n  }, [cells]);\n\n  // Function to parse HTML and extract soybeans price\n  const parseHTMLForSoybeansPrice = html => {\n    const $ = cheerio.load(html);\n    const table = $('.ReactTable');\n    const firstRow = table.find('.rt-tr').first();\n    const soybeansPrice = firstRow.find('.rt-td').eq(2).text().trim();\n    return soybeansPrice;\n  };\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: cells.map((cell, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: identifiers[index]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Cell, {\n          type: cell.type,\n          value: cell.value,\n          onChange: newValue => handleCellChange(index, newValue)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n};\n\n// main app\n_s2(Spreadsheet, \"HXRMy9WGioTHkIuA2XY6hABChNc=\");\n_c2 = Spreadsheet;\nfunction App() {\n  const identifiers = ['', 'Corn Acres', 'Bean Acres', 'Total Acres:', 'Rent', 'Seed', 'Fertilizer', '32% and Starter', 'Anhydrous', 'Lime', 'Lime Credit (5 yrs.)', 'Chemical', 'Fungicide', 'Pivot', 'Crop Insurance', 'Fungicide Application', 'Machinery, Labor, Maintenance', 'Interest', 'Total Costs:', 'Total Revenue:', 'Bu/Ac', 'Bushels', 'Price', 'Total Income', 'Net Profit', 'Net Profit/Acre'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(Spreadsheet, {\n        identifiers: identifiers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 188,\n    columnNumber: 5\n  }, this);\n}\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Cell\");\n$RefreshReg$(_c2, \"Spreadsheet\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["logo","axios","cheerio","React","useState","useEffect","jsxDEV","_jsxDEV","CellTypes","TEXT","NUMBER","FORMULA","Cell","type","value","onChange","_s","editing","setEditing","inputValue","setInputValue","handleDoubleClick","handleChange","e","target","handleBlur","onDoubleClick","children","onBlur","autoFocus","fileName","_jsxFileName","lineNumber","columnNumber","_c","Spreadsheet","identifiers","_s2","cells","setCells","handleCellChange","index","newValue","newCells","sum1","slice","reduce","acc","cur","parseFloat","toString","sum3","filter","cell","roundedSum3","toFixed","value95","isNaN","valueTotalAcres","valueTotalCosts","total","roundedSum4","buPerAc","totalAcres","bushels","get","then","response","soybeansPrice","parseHTMLForSoybeansPrice","data","catch","error","console","html","$","load","table","firstRow","find","first","eq","text","trim","map","_c2","App","className","_c3","$RefreshReg$"],"sources":["/Users/joseluistorres/my-projects/my-app/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport axios from 'axios';\nimport cheerio from 'cheerio';\n\n\nimport React, { useState, useEffect } from 'react';\n\nconst CellTypes = {\n  TEXT: 'TEXT',\n  NUMBER: 'NUMBER',\n  FORMULA: 'FORMULA'\n};\n\nconst Cell = ({ type, value, onChange }) => {\n  const [editing, setEditing] = useState(false);\n  const [inputValue, setInputValue] = useState(value);\n\n  useEffect(() => {\n    setInputValue(value);\n  }, [value]);\n\n  const handleDoubleClick = () => {\n    setEditing(true);\n  };\n\n  const handleChange = (e) => {\n    setInputValue(e.target.value);\n  };\n\n  const handleBlur = () => {\n    setEditing(false);\n    onChange(inputValue);\n  };\n\n  return (\n    <td onDoubleClick={handleDoubleClick}>\n      {editing ? (\n        <input\n          type=\"text\"\n          value={inputValue}\n          onChange={handleChange}\n          onBlur={handleBlur}\n          autoFocus\n        />\n      ) : (\n        <span>{value}</span>\n      )}\n    </td>\n  );\n};\n\nconst Spreadsheet = ({ identifiers }) => {\n  const [cells, setCells] = useState([\n    { type: CellTypes.TEXT, value: 'Grandma' },\n    { type: CellTypes.NUMBER, value: '0' },\n    { type: CellTypes.NUMBER, value: '115' },\n    { type: CellTypes.FORMULA, value: '' }, // Total Acres\n    { type: CellTypes.NUMBER, value: '220' },\n    { type: CellTypes.NUMBER, value: '80' },\n    { type: CellTypes.NUMBER, value: '105' },\n    { type: CellTypes.NUMBER, value: '' },\n    { type: CellTypes.NUMBER, value: '' },\n    { type: CellTypes.NUMBER, value: '95' },\n    { type: CellTypes.NUMBER, value: '' },\n    { type: CellTypes.NUMBER, value: '49.74' },\n    { type: CellTypes.NUMBER, value: '15.34' },\n    { type: CellTypes.NUMBER, value: '' },\n    { type: CellTypes.NUMBER, value: '35' },\n    { type: CellTypes.NUMBER, value: '13' },\n    { type: CellTypes.NUMBER, value: '140' },\n    { type: CellTypes.NUMBER, value: '25' },\n    { type: CellTypes.FORMULA, value: '' },\n    { type: CellTypes.TEXT, value: '' },\n    { type: CellTypes.TEXT, value: '65' }, // Bu/Ac\n    { type: CellTypes.FORMULA, value: '' }, // Bushels\n    { type: CellTypes.TEXT, value: '' }, // Price\n  ]);\n\n  const handleCellChange = (index, newValue) => {\n    const newCells = [...cells];\n    newCells[index].value = newValue;\n    setCells(newCells);\n  };\n\n  useEffect(() => {\n    const sum1 = cells.slice(1, 3).reduce((acc, cur) => acc + parseFloat(cur.value), 0);\n    handleCellChange(3, sum1.toString());\n\n    const sum3 = cells\n      .slice(4, 18) // Slicing from index 4 to 17 to include the specified cells\n      .filter(cell => cell.value !== '') // Filtering out empty values\n      .reduce((acc, cur) => acc + parseFloat(cur.value), 0); // Summing up the non-empty values\n\n    const roundedSum3 = sum3.toFixed(2); // Round the sum to 2 decimals\n    handleCellChange(18, roundedSum3.toString()); // Changing the index to 17 for the last formula cell\n\n    // Formula calculation for the new formula cell\n    const value95 = parseFloat(cells[9].value); // Value from the cell above with value 95\n    const newValue = isNaN(value95) ? '' : (value95 * -0.8).toString(); // Multiply by -0.8\n    handleCellChange(10, newValue);\n\n    // Formula calculation for the new formula cell\n    const valueTotalAcres = parseFloat(cells[3].value); // Value from the cell above with value 76\n    const valueTotalCosts = parseFloat(cells[18].value); // Value from the cell above with value 76\n    \n    //  const value95 = parseFloat(cells[10].value); // Value from the cell above with value 95\n    const total = isNaN(valueTotalAcres) || isNaN(valueTotalCosts) ? 0 : (valueTotalAcres * valueTotalCosts); // Multiply the values\n    const roundedSum4 = total.toFixed(2); // Round the sum to 2 decimals\n    handleCellChange(19, roundedSum4);\n\n    const buPerAc = parseFloat(cells[20].value);\n    const totalAcres = parseFloat(cells[3].value);\n    const bushels = isNaN(buPerAc) || isNaN(totalAcres) ? 0 : (buPerAc * totalAcres);\n    handleCellChange(21, bushels.toString());\n\n    // Parsing HTML to get soybeans price and update the last cell\n    axios.get('https://adm.gradable.com/market/Des-Moines--IA')\n      .then(response => {\n        const soybeansPrice = parseHTMLForSoybeansPrice(response.data);\n        handleCellChange(23, soybeansPrice);\n      })\n      .catch(error => {\n        console.error('Error fetching soybeans price:', error);\n      });\n  }, [cells]);\n\n  // Function to parse HTML and extract soybeans price\n  const parseHTMLForSoybeansPrice = (html) => {\n    const $ = cheerio.load(html);\n    const table = $('.ReactTable');\n    const firstRow = table.find('.rt-tr').first();\n    const soybeansPrice = firstRow.find('.rt-td').eq(2).text().trim();\n    return soybeansPrice;\n  };\n\n\n  return (\n    <table>\n      <tbody>\n        {cells.map((cell, index) => (\n          <tr key={index}>\n            <td>{identifiers[index]}</td>\n            <Cell\n              type={cell.type}\n              value={cell.value}\n              onChange={(newValue) => handleCellChange(index, newValue)}\n            />\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\n// main app\nfunction App() {\n  const identifiers = [\n    '',\n    'Corn Acres',\n    'Bean Acres',\n    'Total Acres:',\n    'Rent',\n    'Seed',\n    'Fertilizer',\n    '32% and Starter',\n    'Anhydrous',\n    'Lime',\n    'Lime Credit (5 yrs.)',\n    'Chemical',\n    'Fungicide',\n    'Pivot',\n    'Crop Insurance',\n    'Fungicide Application',\t\n    'Machinery, Labor, Maintenance', \n    'Interest', \n    'Total Costs:', \n    'Total Revenue:',\n    'Bu/Ac',\n    'Bushels',\n    'Price',\n    'Total Income',\n    'Net Profit',\n    'Net Profit/Acre'\n  ];\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Spreadsheet identifiers={identifiers} />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}